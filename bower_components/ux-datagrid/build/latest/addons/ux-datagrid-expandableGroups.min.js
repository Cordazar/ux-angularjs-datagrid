/*!
* ux-angularjs-datagrid v.1.2.6
* (c) 2015, Obogo
* https://github.com/obogo/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


exports.datagrid.events.COLLAPSE_ALL_GROUPS="datagrid:collapseAllGroups",exports.datagrid.events.EXPAND_ALL_GROUPS="datagrid:expandAllGroups",exports.datagrid.events.COLLAPSE_GROUP="datagrid:collapseGroup",exports.datagrid.events.EXPAND_GROUP="datagrid:expandGroup",exports.datagrid.events.TOGGLE_GROUP="datagrid:toggleGroup",angular.module("ux").factory("expandableGroups",function(){return["inst",function(a){function b(){i.length=0;for(var a,b=k(),d=0,e=-1,f=b&&b.length||0;f>d;)a=b[d],c(a)?(e+=1,i.push(a)):h[e]&&i.push(a),d+=1;b.length&&!i.length&&window.console&&window.console.warn&&console.warn("ExpandableGroups does not work with async loaded groups. It cannot keep the indexes in sync. Try this example http://jsfiddle.net/wesjones/3Wg79/")}function c(b){return g.hideEmptyGroups?b[a.grouped]&&b[a.grouped].length:b[a.grouped]}function d(){b(),a.reset()}function e(a){for(var b=0,d=0;a>b;)c(i[b])&&(d+=1),b+=1;return d}var f=exports.logWrapper("expandableGroups",{},"orange",a.dispatch),g=a.expandableGroups||{},h={},i=[],j=a.setData,k=a.getData;return a.setData=function(){return j.apply(a,arguments),b(),i},a.getData=function(){return i},f.expand=function(a,b){var c=b?a:e(a);h[c]=!0,d()},f.collapse=function(a,b){var c=b?a:e(a);delete h[c],d()},f.toggle=function(a){var b=e(a);h[b]?f.collapse(b,!0):f.expand(b,!0)},f.isExpanded=function(a){var b=e(a);return!!h[b]},a.unwatchers.push(a.scope.$on(exports.datagrid.events.EXPAND_GROUP,function(a,b){f.expand(b)})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.COLLAPSE_GROUP,function(a,b){f.collapse(b)})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.TOGGLE_GROUP,function(a,b){f.toggle(e(b))})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.COLLAPSE_ALL_GROUPS,function(){h={},d()})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.EXPAND_ALL_GROUPS,function(){var b=a.getOriginalData();h={},exports.each(b,function(a,b){h[b]=!0}),d()})),a.expandableGroups=f,a}]});
//# sourceMappingURL=ux-datagrid-expandableGroups.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
