/*!
* ux-angularjs-datagrid v.1.4.9
* (c) 2016, Obogo
* https://github.com/obogo/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


exports.datagrid.events.COLLAPSE_GROUP="datagrid:collapseGroup",exports.datagrid.events.EXPAND_GROUP="datagrid:expandGroup",exports.datagrid.events.TOGGLE_GROUP="datagrid:toggleGroup",angular.module("ux").factory("collapsibleGroups",function(){return["inst",function(a){function b(b){return i="number"==typeof b?b:a.getNormalizedIndex(b,i)}function c(a){var b=d(a);return b?!!k[a+1]:!!k[a]}function d(b){var c=a.getRowItem(b);return!!(c&&a.grouped&&c[a.grouped]&&c[a.grouped].length)}function e(b,c){for(var d,e=0,h=a.getRowItem(b),i=h[a.grouped].length;i>e;)d=c===m.COLLAPSE?f(b+e+1):g(b+e+1),d=!1,e+=1;a.updateHeights()}function f(b){var d;return c(b)?!1:(d=a.getRowElm(b)[0],k[b]={prevDisplay:d.style.display,height:0},d.style.display="none",!0)}function g(b){var d;return c(b)?(d=a.getRowElm(b)[0],d.style.display=k[b].prevDisplay,delete k[b],!0):!1}var h=exports.logWrapper("collapsibleGroups",{},"orange",a),i=0,j=[],k={},l=a.templateModel.getTemplateHeight,m={COLLAPSE:"collapse",EXPAND:"expand"};return h.collapse=function(a){var c=b(a);e(c,m.COLLAPSE)},h.expand=function(a){var c=b(a);e(c,m.EXPAND)},h.toggle=function(a){var e=b(a);return d(e)?c(e)?h.expand(e):h.collapse(e):!1},a.templateModel.getTemplateHeight=function(a){var c=b(a);return k[c]?k[c].height:l(a)},a.unwatchers.push(a.scope.$on(exports.datagrid.events.EXPAND_GROUP,function(a,b){h.expand(b)})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.COLLAPSE_GROUP,function(a,b){h.collapse(b)})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.TOGGLE_GROUP,function(a,b){h.toggle(b)})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.ON_BEFORE_DATA_CHANGE,function(b){var c,d,e;j.length=0;for(d in k)exports.util.apply(Object.prototype.hasOwnProperty,k,[d])&&(c=k[d],e=a.getRowItem(d-1),e&&e[a.grouped]&&j.push(d-1));k={}})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.ON_RENDER_AFTER_DATA_CHANGE,function(a){exports.each(j,h.collapse)})),a.collapsibleGroups=h,a}]});
//# sourceMappingURL=ux-datagrid-collapsibleGroups.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
