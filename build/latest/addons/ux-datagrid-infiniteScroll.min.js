/*
* ux-angularjs-datagrid v.1.1.6
* (c) 2014, WebUX
* https://github.com/webux/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


angular.module("ux").factory("infiniteScroll",function(){return["inst","$filter",function(a,b){function c(){return"function"==typeof a.options.infiniteScroll.limit?a.options.infiniteScroll.limit():a.options.infiniteScroll.limit||0}var d={},e=-1,f={_template:"loadingRow"},g=[];a.options.infiniteScroll=a.options.infiniteScroll||{},a.options.infiniteScroll.enable=void 0===a.options.infiniteScroll.enable?!0:a.options.infiniteScroll.enable,a.options.infiniteScroll.limit=void 0===a.options.infiniteScroll.limit?0:a.options.infiniteScroll.limit,d.onBeforeDataChange=function(e,f){if(a.options.infiniteScroll.enable&&f){var g=c();g&&(e.newValue=b("limitTo")(f,g),e.newValue.length<g&&(e.preventDefault(),d.addExtraRow(e.newValue)))}},d.addExtraRow=function(b){e=a.values.scroll,b.length&&b[b.length-1]!==f&&(a.element.addClass("loadingInfiniteRowData"),b.push(f))},d.afterRowsAdded=function(){a.element.removeClass("loadingInfiniteRowData")},d.enable=function(){g.push(a.scope.$on(ux.datagrid.events.ON_BEFORE_DATA_CHANGE,d.onBeforeDataChange)),g.push(a.scope.$on(ux.datagrid.events.ON_RENDER_AFTER_DATA_CHANGE,d.afterRowsAdded))},d.disable=function(){for(;g.length;)g.pop()()},d.destroy=function(){d.disable(),f=null,d=null},d.enable(),a.infiniteScroll=d}]});
//# sourceMappingURL=ux-datagrid-infiniteScroll.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
