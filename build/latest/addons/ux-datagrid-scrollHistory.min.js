/*!
* ux-angularjs-datagrid v.1.4.8
* (c) 2016, Obogo
* https://github.com/obogo/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


exports.datagrid.events.AFTER_SCROLL_HISTORY_INIT_SCROLL="datagrid:afterScrollHistoryInitScroll",angular.module("ux").service("scrollHistoryModel",["$location","$rootScope",function(a,b){var c={};return exports.datagrid.scrollHistory=function(){function d(){return a.url()}function e(a,b){c[a]=b,j.log("storeScroll %s = %s",a,b)}function f(a){return j.getScroll(a||j.getPath())}function g(a){return c[a]||0}function h(a){a=a||d(),j.log("clearPath %s",a),delete c[a]}function i(){j.log("clear all stored values"),c={}}var j=exports.logWrapper("scrollHistoryModel",{},"orange",function(){exports.util.apply(b.$emit,b,arguments)});return j.getPath=d,j.getCurrentScroll=f,j.getScroll=g,j.storeScroll=e,j.clearPath=h,j.clear=i,j}(),exports.datagrid.scrollHistory}]),angular.module("ux").factory("scrollHistory",function(){return["inst","scrollHistoryModel",function(a,b){var c,d,e=exports.logWrapper("scrollHistory",{},"blue",a),f=a.options.scrollHistory&&a.options.scrollHistory.path||"",g=!1,h=[];return a.options.scrollHistory&&a.options.scrollHistory.ignoreParams&&(f=b.getPath().split("?").shift()),e.getPath=f?function(){return f}:b.getPath,e.storeCurrentScroll=function(){e.storeScroll(e.getPath(),a.values.scroll)},e.storeScroll=b.storeScroll,e.getCurrentScroll=f?function(){return b.getCurrentScroll(f)}:b.getCurrentScroll,e.getScroll=b.getScroll,e.clearPath=b.clearPath,e.setScrollValue=function(){d=e.getCurrentScroll(),a.scrollModel.setScroll(d)},e.setScroll=function(a){b.storeScroll(e.getPath(),a)},e.isComplete=function(){return void 0===d&&e.setScrollValue(),0===d},e.scroll=function(){a.getContentHeight()-a.getViewportHeight()<d&&a.values.scroll&&(e.log("	scrollTo 0 because scroll %s is too tall for the content",d),a.scrollModel.setScroll(0),a.scrollModel.scrollTo(0,!0))},h.push(a.scope.$on(exports.datagrid.events.ON_BEFORE_DATA_CHANGE,function(){e.log("found scrollHistory so scrollTo %s",e.getCurrentScroll()),c=!0,e.setScrollValue(),g=!0,h.shift()()})),h.push(a.scope.$on(exports.datagrid.events.ON_RENDER_AFTER_DATA_CHANGE,function(){a.getContentHeight()?(e.log("onRenderAfterDataChange"),g=!1,e.scroll(),a.scrollModel.iScroll||a.dispatch(exports.datagrid.events.AFTER_SCROLL_HISTORY_INIT_SCROLL),h.shift()()):e.log("onRenderAfterDataChange skipped because there is no contentHeight")})),a.unwatchers.push(a.scope.$on(exports.datagrid.events.ON_AFTER_UPDATE_WATCHERS,function(){c&&!g&&(d=0,e.storeCurrentScroll())})),e.destroy=function(){for(;h.length;)h.pop()();a.scrollHistory=null,e=null,a=null,b=null},a.scrollHistory=e,a}]});
//# sourceMappingURL=ux-datagrid-scrollHistory.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
